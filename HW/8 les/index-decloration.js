// Вид объявления функции : Function Dicloration.
// Можно вызывать до определния функции
//  function sum(a, b, callback)    {
//     cosnt = result = a+b;
//     callback(result);
// }
// a и b - параметры. Они могут быть любым типом данных, 
// в том числе функцией
// function displayer(res) {
//     console.log('Результат', res);
// }
// sum(3,10, displayer)

// sum(123,10, function(res){
//     console.log('Результат', res);
// })
// sum(5,10,alert);
// Можем передавать анонимные функции 
// (прописываем функции свнутри вызова функции)
// sum(5,22, console.log);
// Можем вызвать уже прописанные функции, типо алерта и консоль лога
// \\/\RETURN
// Если нам не нужно выводить результат функции, а надо просто что-то посчитать, то:
// // То Return просто дает возможность вывести(вызвать, запросить) полученное значение в заданной функции

// function sum(a,b){
//     return a+b;
// }
// sum(10,20);
// // ничегно не выведлось, а если:
// const result = sum (10,20);
// console.log(result);
// // Можно и не создавать переменную, а так:
// console.log(sum(2,3));
// Return возвращает выполнение функции
// и сразу возвращает результат. 
// Т.е. код после ретурна не будет выполняться.
